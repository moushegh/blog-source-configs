--- 
Resources: 
  AWSEBAutoScalingGroup: 
    Metadata: 
      ? "AWS::CloudFormation::Authentication"
      : 
        S3Auth: 
          buckets: 
            - buffi
          roleName: 
            ? "Fn::GetOptionSetting"
            : 
              DefaultValue: aws-elasticbeanstalk-ec2-role
              Namespace: "aws:asg:launchconfiguration"
              OptionName: IamInstanceProfile
          type: s3
  sslSecurityGroupIngress: 
    Properties: 
      CidrIp: 0.0.0.0/0
      FromPort: 443
      GroupId: 
        ? "Fn::GetAtt"
        : 
          - AWSEBSecurityGroup
          - GroupId
      IpProtocol: tcp
      ToPort: 443
    Type: "AWS::EC2::SecurityGroupIngress"
files: 
  /etc/nginx/conf.d/https.conf: 
    content: |
        # HTTPS Server
        
        server {
          listen 443 ssl;
          server_name nazaretyan.com;
          add_header Strict-Transport-Security "max-age=31536000";
          ssl_protocols  TLSv1 TLSv1.1 TLSv1.2;
          ssl_session_cache builtin:1000 shared:SSL:10m;
          ssl_ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:HIGH:!aNULL:!eNULL:!LOW:!3DES:!MD5:!EXP:!CBC:!EDH:!kEDH:!PSK:!SRP:!kECDH;
          ssl_prefer_server_ciphers on;
          keepalive_timeout 150;
          ssl_session_timeout 10m;
        
          ssl_certificate /etc/pki/tls/certs/server.crt;
          ssl_certificate_key /etc/pki/tls/certs/server.key;
        
          location / {
            proxy_pass http://docker;
            proxy_http_version 1.1;
        
            proxy_set_header Connection "";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          }
        }
    group: root
    mode: "000644"
    owner: root
  /etc/pki/tls/certs/server.crt: 
    authentication: S3Auth
    group: root
    mode: "000700"
    owner: root
    source: "https://s3.eu-central-1.amazonaws.com/buffi/nazaretyan_com.crt"
  /etc/pki/tls/certs/server.key: 
    authentication: S3Auth
    group: root
    mode: "000700"
    owner: root
    source: "https://s3.eu-central-1.amazonaws.com/buffi/nazaretyan_com.key"
